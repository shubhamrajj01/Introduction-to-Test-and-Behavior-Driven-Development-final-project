# Introduction to Test and Behavior Driven Development – Final Project

This project is part of the **Test-Driven Development (TDD)** and **Behavior-Driven Development (BDD)** final assignment.
It demonstrates how to build a simple product catalog service with full **unit tests**, **API tests**, and **BDD scenarios**.

---

## 🚀 Features

* **Factory-based test data** with [factory\_boy](https://factoryboy.readthedocs.io/)
* **Model tests** (`tests/test_models.py`) for CRUD and search functionality
* **Route/API tests** (`tests/test_routes.py`) for endpoints (Create, Read, Update, Delete, List, Search)
* **Service routes** (`service/routes.py`) implementing the REST API
* **BDD Scenarios** (`features/products.feature`) written in Gherkin
* **Step Definitions** (`features/steps/*.py`) for both API and web UI steps

---

## 🛠️ Tech Stack

* **Python 3.9+**
* **Flask** – REST API service
* **Pytest** – Unit & API tests
* **Factory Boy** – Fake test data
* **Behave** – BDD framework
* **Flask-RESTX** – API framework
* **Docker** – Containerization (optional)

---

## 📂 Project Structure

```
.
├── service/             # Application code
│   └── routes.py        # API endpoints
├── tests/               # Unit & API tests
│   ├── factories.py     # Fake product factory
│   ├── test_models.py   # Model tests
│   └── test_routes.py   # API route tests
├── features/            # BDD scenarios & steps
│   ├── products.feature # Gherkin scenarios
│   └── steps/           # Step definitions
├── LICENSE              # Apache License 2.0
└── README.md            # Project documentation
```

---

## ⚡ Getting Started

### 1. Clone the Repository

```bash
git clone https://github.com/shubhamrajj01/Introduction-to-Test-and-Behavior-Driven-Development-final-project.git
cd Introduction-to-Test-and-Behavior-Driven-Development-final-project
```

### 2. Create Virtual Environment & Install Dependencies

```bash
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
```

### 3. Run Unit Tests

```bash
pytest
```

### 4. Run BDD Tests

```bash
behave
```

### 5. Start the Service

```bash
flask run
```

---

## ✅ Example API Endpoints

* `GET /products` → List all products
* `GET /products/<id>` → Read product by ID
* `POST /products` → Create a new product
* `PUT /products/<id>` → Update a product
* `DELETE /products/<id>` → Delete a product
* `GET /products?name=<name>` → Search by name
* `GET /products?category=<category>` → Search by category
* `GET /products?available=<true/false>` → Search by availability

---

## 📜 License

This project is licensed under the **Apache License 2.0** – see the [LICENSE](LICENSE) file for details.

---

## 👨‍💻 Author

**Shubham Raj**
GitHub: [@shubhamrajj01](https://github.com/shubhamrajj01)
